{"version":3,"sources":["../src/HtmlRenderer.js"],"names":["tag","tagName","attributes","content","contentEscape","str","Object","keys","forEach","key","HtmlRenderer","options","assign","fileProtocol","filePath","lineNumber","columnNumber","realFilePath","openLocalFile","generatedPath","sourcePath","startsWith","substr","length","error","name","message","production","renderStack","stackTrace","item","i","file","contents","compiledFileName","fileName","realFileName","native","replaceAppInFilePath","functionName","typeName","methodName","realCompiledFileName","compiledLineNumber","compiledColumnNumber","highlightLine","withLineNumbers","minmax","hcontents","err","split","ok","firstLine","start","lineContent","end","Math","max","slice","lines","line","style","startNumber","_lines","contentLine"],"mappings":"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","file":"HtmlRenderer.js","sourcesContent":["/* eslint-disable max-len, max-lines */\n\nimport escape from 'escape-html';\nimport highlight from 'eshighlight-fb';\nimport { parseErrorStack } from './index';\nimport StackTrace from './StackTrace';\n\nfunction tag(tagName, attributes, content, contentEscape) {\n  attributes = attributes || {};\n  let str = '';\n  Object.keys(attributes).forEach(key => {\n    str += ` ${key}`;\n    if (attributes[key]) {\n      str += `=\"${attributes[key] === true ? key : escape(attributes[key])}\"`;\n    }\n  });\n\n  return `<${tagName}${str}${content == null ? '/' :\n                  `>${contentEscape ? escape(content) : content}</${tagName}`}>`;\n}\n\nexport default class HtmlRenderer {\n  constructor(options) {\n    this.options = Object.assign({\n      fileProtocol: 'file',\n    }, options);\n  }\n\n  /**\n   * @ignore\n   */\n  openLocalFile(filePath, lineNumber, columnNumber, realFilePath) {\n    if (this.openLocalFile.generatedPath && this.openLocalFile.sourcePath\n                     && filePath.startsWith(this.openLocalFile.generatedPath)) {\n      filePath = this.openLocalFile.sourcePath + filePath.substr(this.openLocalFile.generatedPath.length);\n    }\n\n    return `<a download href=\"${this.options.fileProtocol}://${escape(realFilePath || filePath)}`\n               + `${!lineNumber ? '' : `?${lineNumber}${!columnNumber ? '' : `:${columnNumber}`}`}\">`;\n  }\n\n  /**\n   * @ignore\n   */\n  replaceAppInFilePath(filePath) {\n    if (this.openLocalFile.generatedPath) {\n      filePath = `APP/${filePath.substr(this.openLocalFile.generatedPath.length)}`;\n    }\n\n    return filePath;\n  }\n\n  /**\n   * @ignore\n   */\n  render(error) {\n    let str = '<div style=\"text-align: left\">';\n    str += `<h4>${error.name}</h4>\\n`;\n    if (error.message) {\n      str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;white-space:pre-wrap;word-wrap:break-word\">';\n      str += escape(error.message);\n      str += '</pre>';\n    }\n\n    str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;padding:1px 2px;\">Call Stack:</h5>\\n';\n\n    if (!this.options.production) {\n      str += `<pre style=\"background:#FFF;color:#222;border:0\">${this.renderStack(error)}</pre>`;\n    }\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  renderStack(error) {\n    let stackTrace = error.stackTrace instanceof StackTrace ? error.stackTrace : parseErrorStack(error);\n\n    let str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n    stackTrace.forEach((item, i) => {\n      if ((item.file && item.file.contents) || item.compiledFileName) {\n        str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;\" '\n                        + 'onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display==\\'none\\'?\\'block\\':\\'none\\';\">';\n      }\n\n      str += `#${i} `;\n      if (item.fileName && item.fileName.startsWith('/')) {\n        str += this.openLocalFile(item.fileName, item.lineNumber, item.columnNumber, item.realFileName);\n      }\n\n      if (!item.native) {\n        str += this.replaceAppInFilePath(item.realFileName || item.fileName);\n        str += `:${item.lineNumber}:${item.columnNumber}`;\n      }\n\n      if (item.fileName) {\n        str += '</a> ';\n      }\n\n      if (item.functionName) {\n        str += item.functionName;\n      } else if (item.typeName) {\n        str += `${item.typeName}.${item.methodName || '<anonymous>'}`;\n      }\n\n      if (item.native) {\n        str += ' [native]';\n      }\n\n      if ((item.file && item.file.contents) || item.compiledFileName) {\n        str += '</a></span>';\n        str += '<div style=\"display:none\">';\n        if (item.compiledFileName) {\n          str += '<div style=\"margin-top: 5px\">';\n          str += '<b>Compiled path :</b><br />';\n          if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n            str += this.openLocalFile(item.compiledFileName, item.compiledLineNumber,\n                                item.compiledColumnNumber, item.realCompiledFileName);\n          }\n\n          str += this.replaceAppInFilePath(item.realCompiledFileName);\n          str += `:${item.compiledLineNumber}:${item.compiledColumnNumber}`;\n          if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n            str += '</a>';\n          }\n\n          str += '</div>';\n        }\n\n        if (item.file && item.file.contents) {\n          str += '<div style=\"margin-top: 5px\">';\n          str += '<b>File content :</b><br />';\n          str += this.highlightLine(item.file.contents, item.lineNumber, item.columnNumber);\n          str += '</div>';\n        }\n\n        str += '</div>';\n      }\n\n      str += '\\n';\n    });\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  highlightLine(contents, lineNumber /* , columnNumber */) {\n    let style = 'background:#3F1F1F;';\n    let withLineNumbers = true;\n    let minmax = 4;\n\n    let hcontents;\n    try {\n      hcontents = highlight(contents);\n    } catch (err) {\n      hcontents = escape(contents);\n    }\n\n    hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n    let ok = lineNumber <= hcontents.length;\n    let firstLine;\n    let start;\n    let lineContent;\n    let end;\n\n    if (ok) {\n      firstLine = Math.max(0, minmax ? lineNumber - 1 - minmax : 0);\n      start = hcontents.slice(firstLine, lineNumber - 1);\n      lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n      end = hcontents.slice(lineNumber, lineNumber + minmax);\n    } else {\n      start = hcontents;\n    }\n\n        /* if (withLineNumbers) {\n            // $withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        } */\n\n    let content = this.lines(withLineNumbers, ok ? firstLine + 1 : 1, start);\n    if (ok) {\n      let attributes = { style };\n      content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n      content += this.lines(withLineNumbers, lineNumber + 1, end);\n    }\n\n    let preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n    return tag('pre', preAttrs, content, false);\n  }\n\n  /**\n   * @ignore\n   */\n  lines(withLineNumbers, startNumber, _lines) {\n    let content = '';\n    _lines.forEach((line) => {\n      content += this.line(withLineNumbers, startNumber + 1, {}, line);\n    });\n    return content;\n  }\n\n  /**\n   * @ignore\n   */\n  line(withLineNumbers, lineNumber, attributes, contentLine) {\n    attributes.style = `${attributes.style || ''}white-space:pre-wrap;`\n            + `${withLineNumbers ? 'padding-left:20px;' : ''}`;\n\n    if (withLineNumbers) {\n      contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + `${lineNumber}</i>${contentLine}`;\n    }\n\n    return tag('div', attributes, contentLine);\n  }\n}\n"]}