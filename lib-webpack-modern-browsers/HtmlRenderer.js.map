{"version":3,"sources":["../src/HtmlRenderer.js"],"names":[],"mappings":"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","file":"HtmlRenderer.js","sourcesContent":["// jscs:disable maximumLineLength\n\nimport escape from 'escape-html';\nimport highlight from 'eshighlight-fb';\nimport { parseErrorStack } from './index';\nimport StackTrace from './StackTrace';\n\nexport default class HtmlRenderer {\n    constructor(options) {\n        this.options = Object.assign({\n            fileProtocol: 'file',\n        }, options);\n    }\n\n    /**\n     * @ignore\n     */\n    openLocalFile(filePath, lineNumber, columnNumber, realFilePath) {\n        if (this.openLocalFile.generatedPath && this.openLocalFile.sourcePath\n                     && filePath.startsWith(this.openLocalFile.generatedPath)) {\n            filePath = this.openLocalFile.sourcePath + filePath.substr(this.openLocalFile.generatedPath.length);\n        }\n\n        return `<a download href=\"${this.options.fileProtocol}://${escape(realFilePath || filePath)}`\n               + `${!lineNumber ? '' : `?${lineNumber}${!columnNumber ? '' : `:${columnNumber}`}`}\">`;\n    }\n\n    /**\n     * @ignore\n     */\n    replaceAppInFilePath(filePath) {\n        if (this.openLocalFile.generatedPath) {\n            filePath = `APP/${filePath.substr(this.openLocalFile.generatedPath.length)}`;\n        }\n\n        return filePath;\n    }\n\n    /**\n     * @ignore\n     */\n    render(error) {\n        let str = '<div style=\"text-align: left\">';\n        str += `<h4>${error.name}</h4>\\n`;\n        if (error.message) {\n            str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;white-space:pre-wrap;word-wrap:break-word\">';\n            str += escape(error.message);\n            str += '</pre>';\n        }\n\n        str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;padding:1px 2px;\">Call Stack:</h5>\\n';\n\n        if (!this.options.production) {\n            str += `<pre style=\"background:#FFF;color:#222;border:0\">${this.renderStack(error)}</pre>`;\n        }\n\n        return str;\n    }\n\n    /**\n     * @ignore\n     */\n    renderStack(error) {\n        let stackTrace = error.stackTrace instanceof StackTrace ? error.stackTrace : parseErrorStack(error);\n\n        let str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n        stackTrace.forEach((item, i) => {\n            if ((item.file && item.file.contents) || item.compiledFileName) {\n                str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;\" '\n                        + 'onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display==\\'none\\'?\\'block\\':\\'none\\';\">';\n            }\n\n            str += `#${i} `;\n            if (item.fileName && item.fileName.startsWith('/')) {\n                str += this.openLocalFile(item.fileName, item.lineNumber, item.columnNumber, item.realFileName);\n            }\n\n            if (!item.native) {\n                str += this.replaceAppInFilePath(item.realFileName || item.fileName);\n                str += `:${item.lineNumber}:${item.columnNumber}`;\n            }\n\n            if (item.fileName) {\n                str += '</a> ';\n            }\n\n            if (item.functionName) {\n                str += item.functionName;\n            } else if (item.typeName) {\n                str += `${item.typeName}.${item.methodName || '<anonymous>'}`;\n            }\n\n            if (item.native) {\n                str += ' [native]';\n            }\n\n            if ((item.file && item.file.contents) || item.compiledFileName) {\n                str += '</a></span>';\n                str += '<div style=\"display:none\">';\n                if (item.compiledFileName) {\n                    str += '<div style=\"margin-top: 5px\">';\n                    str += '<b>Compiled path :</b><br />';\n                    if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n                        str += this.openLocalFile(item.compiledFileName, item.compiledLineNumber,\n                                item.compiledColumnNumber, item.realCompiledFileName);\n                    }\n\n                    str += this.replaceAppInFilePath(item.realCompiledFileName);\n                    str += `:${item.compiledLineNumber}:${item.compiledColumnNumber}`;\n                    if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n                        str += '</a>';\n                    }\n\n                    str += '</div>';\n                }\n\n                if (item.file && item.file.contents) {\n                    str += '<div style=\"margin-top: 5px\">';\n                    str += '<b>File content :</b><br />';\n                    str += this.highlightLine(item.file.contents, item.lineNumber, item.columnNumber);\n                    str += '</div>';\n                }\n\n                str += '</div>';\n            }\n\n            str += '\\n';\n        });\n\n        return str;\n    }\n\n    /**\n     * @ignore\n     */\n    highlightLine(contents, lineNumber /* , columnNumber */) {\n        let style = 'background:#3F1F1F;';\n        let withLineNumbers = true;\n        let minmax = 4;\n\n        let hcontents;\n        try {\n            hcontents = highlight(contents);\n        } catch (err) {\n            hcontents = escape(contents);\n        }\n\n        hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n        let ok = lineNumber <= hcontents.length;\n        let firstLine;\n        let start;\n        let lineContent;\n        let end;\n\n        if (ok) {\n            firstLine = Math.max(0, minmax ? lineNumber - 1 - minmax : 0);\n            start = hcontents.slice(firstLine, lineNumber - 1);\n            lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n            end = hcontents.slice(lineNumber, lineNumber + minmax);\n        } else {\n            start = hcontents;\n        }\n\n        /* if (withLineNumbers) {\n            // $withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        } */\n\n        let content = this.lines(withLineNumbers, ok ? firstLine + 1 : 1, start);\n        if (ok) {\n            let attributes = { style: style };\n            content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n            content += this.lines(withLineNumbers, lineNumber + 1, end);\n        }\n\n        let preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n        return this.tag('pre', preAttrs, content, false);\n    }\n\n    /**\n     * @ignore\n     */\n    lines(withLineNumbers, startNumber, _lines) {\n        let content = '';\n        _lines.forEach((line) => {\n            content += this.line(withLineNumbers, startNumber++, {}, line);\n        });\n        return content;\n    }\n\n    /**\n     * @ignore\n     */\n    line(withLineNumbers, lineNumber, attributes, contentLine) {\n        attributes.style = `${attributes.style || ''}white-space:pre-wrap;`\n            + `${withLineNumbers ? 'padding-left:20px;' : ''}`;\n\n        if (withLineNumbers) {\n            contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + `${lineNumber}</i>${contentLine}`;\n        }\n\n        return this.tag('div', attributes, contentLine);\n    }\n\n    /**\n     * @ignore\n     */\n    tag(tagName, attributes, content, contentEscape) {\n        attributes = attributes || {};\n        let str = '';\n        Object.keys(attributes).forEach(key => {\n            str += ` ${key}`;\n            if (attributes[key]) {\n                str += `=\"${attributes[key] === true ? key : escape(attributes[key])}\"`;\n            }\n        });\n\n        return `<${tagName}${str}${content == null ? '/' :\n                    `>${contentEscape ? escape(content) : content}</${tagName}`}>`;\n    }\n}\n"]}