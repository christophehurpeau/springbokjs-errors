{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;AACA;;AACA;;AAFA;AAIA,KAAK,oCAAL,EAA2C,MAAM;AAC7C,QAAI;AACC,qBAAY;AACT,oCADS,CACe;AACxB;AACA,mCAHS,CAGc;AAC1B,SAJA,GAAD;AAKH,KAND,CAME,OAAO,GAAP,EAAY;AACV;AACA,YAAI,QAAQ,uBAAgB,GAAhB,CAAZ;AACA;AACA;AACA,YAAI,YAAY,MAAM,KAAN,CAAY,CAAZ,CAAhB;AACA,iCAAY,UAAU,QAAtB,EAAgC,WAAW,OAAX,CAAmB,SAAnB,EAA8B,OAA9B,CAAhC;AACA,iCAAY,UAAU,YAAtB,EAAoC,WAAW,OAAX,CAAmB,SAAnB,EAA8B,OAA9B,CAApC;AACA,iCAAY,UAAU,UAAtB,EAAkC,CAAlC;AACA,iCAAY,UAAU,YAAtB,EAAoC,EAApC;AACH;AACJ,CAlBD","file":"index.js","sourcesContent":["/* global test */\nimport { strictEqual } from 'assert';\nimport { parseErrorStack } from '../../';\n\ntest('should have parsed the stack trace', () => {\n    try {\n        (function () {\n            /* jshint ignore:start*//*eslint-disable */\n            unknownFunction();\n            /* jshint ignore:end *//*eslint-enable */\n        }());\n    } catch (err) {\n        // console.log(err.stack);\n        let stack = parseErrorStack(err);\n        // console.log('========');\n        // console.log(stack.toString());\n        let firstItem = stack.items[0];\n        strictEqual(firstItem.fileName, __filename.replace('/node6/', '/src/'));\n        strictEqual(firstItem.realFileName, __filename.replace('/node6/', '/src/'));\n        strictEqual(firstItem.lineNumber, 9);\n        strictEqual(firstItem.columnNumber, 12);\n    }\n});\n"]}