{"version":3,"sources":["../src/StackTraceItem.js"],"names":[],"mappings":";;;;;AAAe,MAAM,cAAN,CAAqB;AAChC,gBAAY,IAAZ,EAAkB,aAAlB,EAAiC;AAC7B,aAAK,QAAL,GAAgB,KAAK,QAArB;AACA,aAAK,UAAL,GAAkB,KAAK,UAAvB;AACA,aAAK,YAAL,GAAoB,KAAK,YAAzB;AACA,aAAK,YAAL,GAAoB,KAAK,YAAzB;AACA,aAAK,QAAL,GAAgB,KAAK,QAArB;AACA,aAAK,UAAL,GAAkB,KAAK,UAAvB;AACA,aAAK,MAAL,GAAc,KAAK,MAAnB;AACA,aAAK,IAAL,GAAY,KAAK,IAAjB;;AAEA,aAAK,gBAAL,GAAwB,KAAK,gBAA7B;AACA,aAAK,kBAAL,GAA0B,KAAK,kBAA/B;AACA,aAAK,oBAAL,GAA4B,KAAK,oBAAjC;;AAEA,YAAI,iBAAiB,KAAK,QAAtB,IAAkC,KAAK,QAAL,CAAc,UAAd,CAAyB,cAAc,OAAvC,CAAtC,EAAuF;AACnF,iBAAK,YAAL,GAAoB,cAAc,MAAd,GACM,KAAK,QAAL,CAAc,MAAd,CAAqB,cAAc,OAAd,CAAsB,MAA3C,CAD1B;AAEA,gBAAI,KAAK,gBAAT,EAA2B;AACvB,qBAAK,oBAAL,GAA4B,cAAc,MAAd,GACN,KAAK,QAAL,CAAc,MAAd,CAAqB,cAAc,OAAd,CAAsB,MAA3C,CADtB;AAEH;AACJ,SAPD,MAOO;AACH,iBAAK,YAAL,GAAoB,KAAK,QAAzB;AACA,iBAAK,oBAAL,GAA4B,KAAK,gBAAjC;AACH;AACJ;;AAED,kBAAc;AACV,eAAO,KAAK,QAAZ;AACH;;AAED,oBAAgB;AACZ,eAAO,KAAK,IAAZ;AACH;;AAED,sBAAkB;AACd,eAAO,KAAK,MAAL,GAAc,CAArB;AACH;;AAED,+BAA2B;AACvB,eAAO,KAAK,QAAZ;AACH;;AAED,eAAW;AACP,YAAI,MAAM,SAAV;AACA,YAAI,KAAK,YAAT,EAAuB;AACnB,mBAAO,KAAK,YAAZ;AACH,SAFD,MAEO,IAAI,KAAK,QAAT,EAAmB;AACtB,mBAAQ,IAAE,KAAK,QAAS,MAAG,KAAK,UAAL,IAAmB,aAAc,GAA5D;AACH;;AAED,YAAI,KAAK,MAAT,EAAiB;AACb,mBAAO,WAAP;AACH,SAFD,MAEO;AACH,kBAAM,WAAY,IAAE,KAAK,YAAa,MAAG,KAAK,UAAW,MAAG,KAAK,YAAa,GAA9E;AACA,gBAAI,KAAK,YAAL,IAAqB,KAAK,QAA9B,EAAwC;AACpC,uBAAQ,MAAI,QAAS,IAArB;AACH,aAFD,MAEO;AACH,uBAAO,QAAP;AACH;;AAED,gBAAI,KAAK,gBAAL,IAAyB,KAAK,gBAAL,KAA0B,KAAK,YAA5D,EAA0E;AACtE,sBAAM,eAAgB,IAAE,KAAK,gBAAiB,MAAG,KAAK,kBAAmB,MAAG,KAAK,oBAAqB,GAAtG;AACA,uBAAQ,gBAAc,YAAa,IAAnC;AACH;AACJ;AACD,eAAO,GAAP;AACH;AApE+B;kBAAf,c","file":"StackTraceItem.js","sourcesContent":["export default class StackTraceItem {\n    constructor(item, sourceMapping) {\n        this.fileName = item.fileName;\n        this.lineNumber = item.lineNumber;\n        this.columnNumber = item.columnNumber;\n        this.functionName = item.functionName;\n        this.typeName = item.typeName;\n        this.methodName = item.methodName;\n        this.native = item.native;\n        this.file = item.file;\n\n        this.compiledFileName = item.compiledFileName;\n        this.compiledLineNumber = item.compiledLineNumber;\n        this.compiledColumnNumber = item.compiledColumnNumber;\n\n        if (sourceMapping && item.fileName && item.fileName.startsWith(sourceMapping.current)) {\n            this.realFileName = sourceMapping.source\n                                    + item.fileName.substr(sourceMapping.current.length);\n            if (this.compiledFileName) {\n                this.realCompiledFileName = sourceMapping.source\n                                    + item.fileName.substr(sourceMapping.current.length);\n            }\n        } else {\n            this.realFileName = item.fileName;\n            this.realCompiledFileName = item.compiledFileName;\n        }\n    }\n\n    getFileName() {\n        return this.fileName;\n    }\n\n    getLineNumber() {\n        return this.line;\n    }\n\n    getColumnNumber() {\n        return this.column + 1;\n    }\n\n    getScriptNameOrSourceURL() {\n        return this.fileName;\n    }\n\n    toString() {\n        let str = '    at ';\n        if (this.functionName) {\n            str += this.functionName;\n        } else if (this.typeName) {\n            str += `${this.typeName}.${this.methodName || '<anonymous>'}`;\n        }\n\n        if (this.native) {\n            str += ' [native]';\n        } else {\n            const fullPath = `${this.realFileName}:${this.lineNumber}:${this.columnNumber}`;\n            if (this.functionName || this.typeName) {\n                str += ` (${fullPath})`;\n            } else {\n                str += fullPath;\n            }\n\n            if (this.compiledFileName && this.compiledFileName !== this.realFileName) {\n                const compiledPath = `${this.compiledFileName}:${this.compiledLineNumber}:${this.compiledColumnNumber}`;\n                str += ` (compiled= ${compiledPath})`;\n            }\n        }\n        return str;\n    }\n}\n"]}