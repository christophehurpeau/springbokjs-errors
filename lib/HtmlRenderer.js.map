{"version":3,"sources":["../src/HtmlRenderer.js"],"names":[],"mappings":"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","file":"HtmlRenderer.js","sourcesContent":["// jscs:disable maximumLineLength\n\nimport escape from 'escape-html';\nimport highlight from 'eshighlight-fb';\nimport { parseErrorStack } from './index';\nimport StackTrace from './StackTrace';\n\nexport default class HtmlRenderer {\n    constructor(options) {\n        this.options = options || {};\n    }\n\n    openLocalFile(filePath, lineNumber, columnNumber, realFilePath) {\n        if (this.openLocalFile.generatedPath && this.openLocalFile.sourcePath\n                     && filePath.startsWith(this.openLocalFile.generatedPath)) {\n            filePath = this.openLocalFile.sourcePath + filePath.substr(this.openLocalFile.generatedPath.length);\n        }\n\n        return '<a href=\"openlocalfile://' + escape(realFilePath || filePath)\n               + (lineNumber && '?' + lineNumber + (columnNumber && ':' + columnNumber)) + '\">';\n    }\n\n    replaceAppInFilePath(filePath) {\n        if (this.openLocalFile.generatedPath) {\n            filePath = 'APP/' + filePath.substr(this.openLocalFile.generatedPath.length);\n        }\n\n        return filePath;\n    }\n\n    render(error) {\n        let str = '<div style=\"text-align: left\">';\n        str += '<h4>' + error.name + '</h4>' + '\\n';\n        if (error.message) {\n            str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;white-space:pre-wrap;word-wrap:break-word\">';\n            str += escape(error.message);\n            str += '</pre>';\n        }\n\n        str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;padding:1px 2px;\">Call Stack:</h5>' + '\\n';\n\n        if (!this.options.production) {\n            str += '<pre style=\"background:#FFF;color:#222;border:0\">' + this.renderStack(error) + '</pre>';\n        }\n\n        return str;\n    }\n\n    renderStack(error) {\n        let stackTrace = error.stack instanceof StackTrace ? error.stack : parseErrorStack(error);\n\n        let str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n        stackTrace.forEach((item, i) => {\n            if ((item.file && item.file.contents) || item.compiledFileName) {\n                str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;\" '\n                        + 'onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display==\\'none\\'?\\'block\\':\\'none\\';\">';\n            }\n\n            str += '#' + i + ' ';\n            if (item.fileName && item.fileName.startsWith('/')) {\n                str += this.openLocalFile(item.fileName, item.lineNumber, item.columnNumber, item.realFileName);\n            }\n\n            if (!item.native) {\n                str += this.replaceAppInFilePath(item.realFileName || item.fileName)\n                                + ':' + item.lineNumber + ':' + item.columnNumber;\n            }\n\n            if (item.fileName) {\n                str += '</a> ';\n            }\n\n            if (item.functionName) {\n                str += item.functionName;\n            } else if (item.typeName) {\n                str += item.typeName + '.' + (item.methodName || '<anonymous>');\n            }\n\n            if (item.native) {\n                str += ' [native]';\n            }\n\n            if ((item.file && item.file.contents) || item.compiledFileName) {\n                str += '</a></span>';\n                str += '<div style=\"display:none\">';\n                if (item.compiledFileName) {\n                    str += '<div style=\"margin-top: 5px\">';\n                    str += '<b>Compiled path :</b><br />';\n                    if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n                        str += this.openLocalFile(item.compiledFileName, item.compiledLineNumber,\n                                item.compiledColumnNumber, item.realCompiledFileName);\n                    }\n\n                    str += this.replaceAppInFilePath(item.realCompiledFileName) + ':' +\n                           item.compiledLineNumber + ':' + item.compiledColumnNumber;\n                    if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n                        str += '</a>';\n                    }\n\n                    str += '</div>';\n                }\n\n                if (item.file && item.file.contents) {\n                    str += '<div style=\"margin-top: 5px\">';\n                    str += '<b>File content :</b><br />';\n                    str += this.highlightLine(item.file.contents, item.lineNumber, item.columnNumber);\n                    str += '</div>';\n                }\n\n                str += '</div>';\n            }\n\n            str += '\\n';\n        });\n\n        return str;\n    }\n\n    highlightLine(contents, lineNumber /* , columnNumber */) {\n        let style = 'background:#3F1F1F;';\n        let withLineNumbers = true;\n        let minmax = 4;\n\n        let hcontents;\n        try {\n            hcontents = highlight(contents);\n        } catch (err) {\n            hcontents = escape(contents);\n        }\n\n        hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n        let ok = lineNumber <= hcontents.length;\n        let firstLine;\n        let start;\n        let lineContent;\n        let end;\n\n        if (ok) {\n            firstLine = Math.max(0, minmax ? lineNumber - 1 - minmax : 0);\n            start = hcontents.slice(firstLine, lineNumber - 1);\n            lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n            end = hcontents.slice(lineNumber, lineNumber + minmax);\n        } else {\n            start = hcontents;\n        }\n\n        /* if (withLineNumbers) {\n            // $withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        } */\n\n        let content = this.lines(withLineNumbers, ok ? firstLine + 1 : 1, start);\n        if (ok) {\n            let attributes = { style: style };\n            content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n            content += this.lines(withLineNumbers, lineNumber + 1, end);\n        }\n\n        let preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n        return this.tag('pre', preAttrs, content, false);\n    }\n\n    lines(withLineNumbers, startNumber, _lines) {\n        let content = '';\n        _lines.forEach((line) => {\n            content += this.line(withLineNumbers, startNumber++, {}, line);\n        });\n        return content;\n    }\n\n    line(withLineNumbers, lineNumber, attributes, contentLine) {\n        attributes.style = (attributes.style || '')\n                + 'white-space:pre-wrap;'\n                + (withLineNumbers ? 'padding-left:20px;' : '');\n\n        if (withLineNumbers) {\n            contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + lineNumber + '</i>'\n                            + contentLine;\n        }\n\n        return this.tag('div', attributes, contentLine);\n    }\n\n    tag(tagName, attributes, content, contentEscape) {\n        attributes = attributes || {};\n        let str = '';\n        for (let key in attributes) {\n            str += ' ' + key;\n            if (attributes[key]) {\n                str += '=\"' + (attributes[key] === true ? key : escape(attributes[key])) + '\"';\n            }\n        }\n\n        return '<' + tagName + str + (content == null ? '/>' :\n                        ('>' + (contentEscape ? escape(content) : content) + '</' + tagName + '>'));\n    }\n}\n"]}