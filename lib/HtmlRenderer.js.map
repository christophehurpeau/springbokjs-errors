{"version":3,"sources":["../src/HtmlRenderer.js"],"names":[],"mappings":"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","file":"src/HtmlRenderer.js","sourcesContent":["/* jshint maxlen: 200 */\nvar highlight = require('eshighlight-harmony');\nvar escape = function(text) {\n    return String(text)\n        .replace(/&(?!\\w+;)/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;');\n};\n\nvar parser = require('./index');\n\nexport default class HtmlRenderer {\n    constructor(options) {\n        this.options = options || {};\n    }\n\n    openLocalFile(filePath, lineNumber, columnNumber, realFilePath) {\n        if (this.openLocalFile.generatedPath && this.openLocalFile.sourcePath\n                     && filePath.startsWith(this.openLocalFile.generatedPath)) {\n            filePath = this.openLocalFile.sourcePath + filePath.substr(this.openLocalFile.generatedPath.length);\n        }\n        return '<a href=\"openlocalfile://' + escape(realFilePath || filePath) + ( lineNumber && '?' + lineNumber + (columnNumber && ':' + columnNumber)) + '\">';\n    }\n\n    replaceAppInFilePath(filePath) {\n        if (this.openLocalFile.generatedPath) {\n            filePath = 'APP/' + filePath.substr(this.openLocalFile.generatedPath.length);\n        }\n        return filePath;\n    }\n\n    render(error) {\n        var str = '<div style=\"text-align: left\">';\n        str += '<h4>' + error.name + '</h4>' + \"\\n\";\n        if (error.message) {\n            str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;white-space:pre-wrap;word-wrap:break-word\">';\n            str += escape(error.message);\n            str += '</pre>';\n        }\n\n        str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;padding:1px 2px;\">Call Stack:</h5>' + \"\\n\";\n\n        if (!this.options.production) {\n            str += '<pre style=\"background:#FFF;color:#222;border:0\">' + this.renderStack(error) + '</pre>';\n        }\n        return str;\n    }\n\n    renderStack(error) {\n        var stackTrace = parser.parseErrorStack(error);\n\n        var str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n        stackTrace.forEach((item, i) => {\n            if (item.file && item.file.contents) {\n                str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;\" '\n                        +'onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display==\\'none\\'?\\'block\\':\\'none\\';\">';\n            }\n            str += '#' + i + ' ';\n            if (item.fileName && item.fileName.startsWith('/')) {\n                str += this.openLocalFile(item.fileName, item.lineNumber, item.columnNumber, item.realFileName);\n            }\n            str += this.replaceAppInFilePath(item.realFileName || item.fileName)  + ':' + item.lineNumber + ':' + item.columnNumber;\n            if (item.fileName) {\n                str += '</a> ';\n            }\n\n            if (item.native) {\n                str += '[native] ';\n            }\n\n            if (item.typeName) {\n                str += item.typeName + '.';\n            }\n            if (item.methodName) {\n                str += item.methodName;\n            }\n            if (item.file && item.file.contents) {\n                str += '</a></span>';\n                str += '<div style=\"margin-top:5px;display:none\">';\n                if (item.compiledFileName) {\n                    str += '<div>';\n                    if (item.realCompiledFileName && item.realCompiledFileName.startsWith('/')) {\n                        str += this.openLocalFile(item.compiledFileName, item.compiledLineNumber, item.compiledColumnNumber, item.realCompiledFileName);\n                    }\n                    str += this.replaceAppInFilePath(item.realCompiledFileName)  + ':' + item.compiledLineNumber + ':' + item.compiledColumnNumber;\n                    str += '</a></div>';\n                }\n                str += '<b>File content :</b><br />';\n                str += this.highlightLine(item.file.contents, item.lineNumber, item.columnNumber);\n                str += '</div>';\n            }\n            str += \"\\n\";\n\n        });\n        return str;\n    }\n\n    highlightLine(contents, lineNumber, columnNumber) {\n        var style = 'background:#3F1F1F;';\n        var withLineNumbers = true;\n        var minmax = 4;\n\n        var hcontents;\n        try {\n            hcontents = highlight(contents);\n        } catch (err) {\n            hcontents = escape(contents);\n        }\n        hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n        var ok = lineNumber <= hcontents.length;\n        var firstLine, start, lineContent, end;\n        if (ok) {\n            firstLine = Math.max(0, minmax ? lineNumber -1 -minmax : 0);\n            start = hcontents.slice(firstLine, lineNumber -1);\n            lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n            end = hcontents.slice(lineNumber, lineNumber + minmax);\n        } else {\n            start = hcontents;\n        }\n\n        if (withLineNumbers) {\n            //$withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        }\n\n        var content = this.lines(withLineNumbers, ok ? firstLine +1 : 1, start);\n        if (ok) {\n            var attributes = { style: style };\n            content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n            content += this.lines(withLineNumbers, lineNumber +1, end);\n        }\n\n        var preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n        return this.tag('pre', preAttrs, content, false);\n    }\n\n    lines(withLineNumbers, startNumber, _lines) {\n        var content = '';\n        _lines.forEach((line) => {\n            content += this.line(withLineNumbers, startNumber++, {}, line);\n        });\n        return content;\n    }\n\n    line(withLineNumbers, lineNumber, attributes, contentLine) {\n        attributes.style = (attributes.style || '')\n                + 'white-space:pre-wrap;'\n                + (withLineNumbers ? 'padding-left:20px;' : '');\n\n        if (withLineNumbers) {\n            contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + lineNumber + '</i>'\n                            + contentLine;\n        }\n        return this.tag('div', attributes, contentLine);\n    }\n\n    tag(tagName, attributes, content, contentEscape) {\n        attributes = attributes || {};\n        var str = '';\n        for (var key in attributes) {\n            str += ' ' + key;\n            if (attributes[key]) {\n                str += '=\"' + (attributes[key] === true ? key : escape(attributes[key])) + '\"';\n            }\n        }\n        return '<' + tagName + str + (content == null ? '/>' :\n                        ('>' + (contentEscape ? escape(content) : content) + '</' + tagName + '>'));\n    }\n}\n"]}