{"version":3,"sources":["../src/ParsedError.js"],"names":[],"mappings":";;;;;IAAqB,cAAN,MAAM,WAAN,CAAkB;;;;AAC7B,gBAAY,GAAZ,EAAiB;AACb,aAAK,IAAL,GAAY,IAAI,IAAJ,CADC;AAEb,aAAK,OAAL,GAAe,IAAI,OAAJ,CAFF;AAGb,aAAK,aAAL,GAAqB,IAAI,KAAJ,CAHR;KAAjB;;AAMA,eAAW;AACP,YAAI,MAAM,CAAC,GAAE,KAAK,IAAL,EAAU,EAAb,GAAiB,KAAK,OAAL,EAAa,EAA9B,CAAN,CADG;AAEP,eAAO,KAAK,KAAL,CAAW,QAAX,EAAP,CAFO;;AAIP,YAAI,KAAK,QAAL,EAAe;AACf,mBAAO,IAAP,CADe;AAEf,mBAAO,YAAP,CAFe;AAGf,mBAAO,KAAK,QAAL,CAAc,QAAd,EAAP,CAHe;SAAnB;;AAMA,eAAO,GAAP,CAVO;KAAX;CAPW;kBAAM","file":"ParsedError.js","sourcesContent":["export default class ParsedError {\n    constructor(err) {\n        this.name = err.name;\n        this.message = err.message;\n        this.originalStack = err.stack;\n    }\n\n    toString() {\n        let str = `${this.name}: ${this.message}\\n`;\n        str += this.stack.toString();\n\n        if (this.previous) {\n            str += '\\n';\n            str += 'PREVIOUS: ';\n            str += this.previous.toString();\n        }\n\n        return str;\n    }\n}\n"]}